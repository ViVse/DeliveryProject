@page "/shops"
@using BLL.DTO.Responses
@using DAL.Pagination
@using System.Text
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using Newtonsoft.Json.Serialization
@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager NavManager
@inject HttpClient Http

<h3>Shops</h3>

@if(shops is null)
{
    <LoadingSpinner></LoadingSpinner>
} else
{ 
    <div class="row">
        @foreach(var shop in shops)
        {
            <div class="col-sm-6">
                <div class="card mb-3">
                  <div class="card-body">
                     <img class="card-img-top" alt="@shop.Name" src="@(
                                        (@shop.Image is null || @shop.Image == "no image") ? 
                                        "https://thumbs.dreamstime.com/b/%D0%B7-%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BC%D0%B0%D0%B3%D0%B0%D0%B7%D0%B8%D0%BD%D0%B0-33822015.jpg"
                                        : @shop.Image)"/>
                    <h5 class="card-title">@shop.Name</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Address: @shop.City, @shop.AddressLine</h6>
                    <p class="card-text">@shop.Description</p>
                     <NavLink class="nav-link card-link" href=@("shops/" + @shop.Id+"?PageNumber=1")>
                        View
                    </NavLink>
                  </div>
                </div>
            </div>
        }
    </div>
    <nav>
          <ul class="pagination">
            <li class="page-item @(pagination.hasPrevious ? "" : "disabled")">
              <NavLink class="page-link" href=@("shops?PageNumber=" + (pagination.currentPage-1) + "&PageSize=2")>Previous</NavLink>
            </li>
                @for(int i=1;i<=@pagination.totalPages;i++)
                {
                    <li class="page-item @(pagination.currentPage == i ? "active" : "")">
                        <a class="page-link" href=@("shops?PageNumber=" + i + "&PageSize=2")>
                            @i
                        </a>
                    </li>
                }
            <li class="page-item @(pagination.hasNext ? "" : "disabled")">
                <NavLink class="page-link" href=@("shops?PageNumber=" + (pagination.currentPage+1) + "&PageSize=2")>Next</NavLink>
            </li>
          </ul>
        </nav>
}



@code {
    List<ShopResponse> shops;
    PaginationInfo pagination; 

    [Parameter]
    [SupplyParameterFromQuery(Name = "PageNumber")]
    public int PageNumber { get; set; } = 1;

    protected override async Task OnInitializedAsync()
    {
        NavManager.LocationChanged += NavigationManager_LocationChanged;
        await LoadData();
    }

    private async Task LoadData()
    {
        var response = await Http.GetAsync("Shops?PageNumber="+PageNumber+"&PageSize=2");
        shops = await HttpResponseConverter.StreamWithNewtonsoftJson<List<ShopResponse>>(response);
        if(response.Headers.Contains("X-Pagination"))
        {
            var paginationInfo = response.Headers.GetValues("X-Pagination").First();
            JObject json = JObject.Parse(paginationInfo);
            var props = Array.ConvertAll(typeof(PaginationInfo).GetProperties().ToArray(), prop => prop.Name);
            pagination = new PaginationInfo();
            foreach (var e in json)
            {
                if(props.Contains(e.Key))
                {
                    var prop = pagination.GetType().GetProperty(e.Key);
                    prop.SetValue(pagination, Convert.ChangeType(e.Value, prop.PropertyType));
                }
            }
        } 
    }

    private void NavigationManager_LocationChanged(object sender, LocationChangedEventArgs e)
    {
        LoadData().ContinueWith((o) => StateHasChanged());
    }

    void Dispose() => NavManager.LocationChanged -= NavigationManager_LocationChanged;
}
